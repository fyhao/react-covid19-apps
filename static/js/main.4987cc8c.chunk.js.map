{"version":3,"sources":["EventManager.tsx","About.tsx","Home.tsx","logo.svg","External.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ee","EventEmitter","About","onClick","emit","msg","Button","color","Component","Home","className","CardGroup","Card","CardBody","CardTitle","tag","CardSubtitle","CardText","External","src","logo","alt","App","state","infomessage","on","this","onInfomsg","off","opts","setState","basename","process","to","Alert","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAKeA,EAFN,I,OAAIC,G,OCqBEC,E,wKAlBb,c,+BAEA,c,oBAIA,WACE,OAEE,gCACE,wBAAQC,QAAS,WAAOH,EAAGI,KAAK,UAAU,CAACC,IAAI,UAA/C,kBACN,cAACC,EAAA,EAAD,CAAQC,MAAM,SAAd,4B,GAZkBC,a,gDCoCLC,MAjCf,WACI,OACI,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACL,cAACC,EAAA,EAAD,UACD,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,8BACA,cAACC,EAAA,EAAD,CAAcD,IAAI,KAAKL,UAAU,kBAAjC,qCACA,cAACO,EAAA,EAAD,6GACA,cAACX,EAAA,EAAD,0BAGD,cAACM,EAAA,EAAD,UACD,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,wBACA,cAACC,EAAA,EAAD,CAAcD,IAAI,KAAKL,UAAU,kBAAjC,2BACA,cAACO,EAAA,EAAD,6GACA,cAACX,EAAA,EAAD,0BAGD,cAACM,EAAA,EAAD,UACD,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,wBACA,cAACC,EAAA,EAAD,CAAcD,IAAI,KAAKL,UAAU,kBAAjC,2BACA,cAACO,EAAA,EAAD,6GACA,cAACX,EAAA,EAAD,gCCjCS,MAA0B,iCCe1BY,MAbf,WACI,OACI,qBAAKR,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKS,IAAKC,EAAMV,UAAU,WAAWW,IAAI,SACzC,gD,QCuDKC,G,kNAnCbC,MAAQ,CACPC,YAAY,I,wDAXb,WACExB,EAAGyB,GAAG,UAAWC,KAAKC,UAAWD,Q,kCAEnC,WACA1B,EAAG4B,IAAI,UAAWF,KAAKC,a,uBAEvB,SAAUE,GACRH,KAAKI,SAAS,CAACN,YAAYK,EAAKxB,Q,oBAOlC,WACE,OACE,cAAC,IAAD,CAAQ0B,SAAUC,sBAAlB,SACE,gCACE,sBAAKtB,UAAU,OAAf,UACE,cAAC,IAAD,CAAMuB,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,yBAE0B,OAA3BP,KAAKH,MAAMC,aAAmD,KAA3BE,KAAKH,MAAMC,aACtD,cAACU,EAAA,EAAD,CAAO3B,MAAM,UAAb,SACCmB,KAAKH,MAAMC,cAEL,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,kB,GApCI5B,cCFH6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4987cc8c.chunk.js","sourcesContent":["\nimport EventEmitter from 'eventemitter3';\n\nvar ee = new EventEmitter();\n\nexport default ee;","\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport ee from './EventManager';\n\nclass About extends Component {\n  componentWillMount() {\n  }\n  componentDidMount() {\n\t \n  }\n  \n  render() {\n    return (\n\n      <div>\n        <button onClick={() => {ee.emit('infomsg',{msg:'test'})}}>Test</button>\n\t\t<Button color=\"danger\">Danger!</Button>\n      </div>\n    )\n  }\n  \n}\n\nexport default About;","\nimport {\n  Card, \n  //CardImg, \n  CardText, CardBody, CardGroup,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nfunction Home() {\n    return (\n        <div className=\"App\">\n          <CardGroup>\n\t\t\t  <Card>\n\t\t\t\t<CardBody>\n\t\t\t\t  <CardTitle tag=\"h5\">World Cases Data</CardTitle>\n\t\t\t\t  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">World Cases Description</CardSubtitle>\n\t\t\t\t  <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n\t\t\t\t  <Button>Button</Button>\n\t\t\t\t</CardBody>\n\t\t\t  </Card>\n\t\t\t  <Card>\n\t\t\t\t<CardBody>\n\t\t\t\t  <CardTitle tag=\"h5\">Card title</CardTitle>\n\t\t\t\t  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\n\t\t\t\t  <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n\t\t\t\t  <Button>Button</Button>\n\t\t\t\t</CardBody>\n\t\t\t  </Card>\n\t\t\t  <Card>\n\t\t\t\t<CardBody>\n\t\t\t\t  <CardTitle tag=\"h5\">Card title</CardTitle>\n\t\t\t\t  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\n\t\t\t\t  <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n\t\t\t\t  <Button>Button</Button>\n\t\t\t\t</CardBody>\n\t\t\t  </Card>\n\t\t  </CardGroup>\n      </div>\n    );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\n\nfunction External() {\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1>\n            External\n          </h1>\n        </header>\n      </div>\n    );\n}\n\nexport default External;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport About from './About';\nimport Home from './Home';\nimport External from './External';\nimport ee from './EventManager';\n\nimport React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends Component {\n  componentWillMount() {\n    ee.on('infomsg', this.onInfomsg, this);\n  }\n  componentWillUnmount() {\n\t ee.off('infomsg', this.onInfomsg);\n  }\n  onInfomsg(opts:any) {\n    this.setState({infomessage:opts.msg});\n  }\n\n  state = {\n\t  infomessage:''\n\t}\n  \n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <div className=\"menu\">\n            <Link to=\"/\">Home</Link>  \n            <Link to=\"/about\">About</Link> \n            <Link to=\"/external\">External</Link>\n          </div>\n          {this.state.infomessage !== null && this.state.infomessage !== '' && \n\t\t\t<Alert color=\"primary\">\n\t\t\t{this.state.infomessage}\n\t\t\t</Alert>}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/external\">\n              <External />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n  \n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}