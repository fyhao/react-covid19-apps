{"version":3,"sources":["Home.tsx","EventManager.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","props","state","covidstatdata","id","totalcases","death","recovered","datetime","fetchCovidStat","bind","this","then","data","setState","fetch","response","json","className","href","target","rel","Table","map","d","Component","ee","EventEmitter","App","infomessage","on","onInfomsg","off","opts","msg","basename","process","to","Alert","color","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAwDeA,E,kDAjDb,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAJRC,MAAQ,CACNC,cAAe,CAAC,CAACC,GAAG,EAAEC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,gBAInE,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAFG,E,sDAIxB,c,+BAEA,WAAqB,IAAD,OACpBC,KAAKF,iBAAiBG,MAAK,SAACC,GAC5B,EAAKC,SAAS,CAACX,cAAcU,S,4BAI7B,WAGC,OAAOE,MAFS,4FAEMH,MAAK,SAACI,GAC7B,OAAOA,EAASC,Y,oBAIhB,WACE,OAEE,sBAAKC,UAAU,MAAf,UACI,8BACP,mBAAGC,KAAK,6CAA6CC,OAAO,SAASC,IAAI,aAAzE,6CAEC,eAACC,EAAA,EAAD,WACF,gCACC,+BACC,uCACA,uCACA,2CACA,gDAGF,gCAECX,KAAKT,MAAMC,cAAcoB,KAAI,SAAAC,GAAC,OAC9B,+BAAqB,6BAAKA,EAAEnB,aAAgB,6BAAKmB,EAAElB,QAAW,6BAAKkB,EAAEjB,YAAe,6BAAKiB,EAAEhB,aAAlFgB,EAAEhB,yB,GA3CKiB,a,QCEJC,EAFN,I,OAAIC,G,QCiDEC,G,kNA3Bb1B,MAAQ,CACP2B,YAAY,I,wDAXb,WACEH,EAAGI,GAAG,UAAWnB,KAAKoB,UAAWpB,Q,kCAEnC,WACAe,EAAGM,IAAI,UAAWrB,KAAKoB,a,uBAEvB,SAAUE,GACRtB,KAAKG,SAAS,CAACe,YAAYI,EAAKC,Q,oBAOlC,WACE,OACE,cAAC,IAAD,CAAQC,SAAUC,sBAAlB,SACE,gCACE,qBAAKlB,UAAU,OAAf,SACE,cAAC,IAAD,CAAMmB,GAAG,IAAT,oBAE0B,OAA3B1B,KAAKT,MAAM2B,aAAmD,KAA3BlB,KAAKT,MAAM2B,aACtD,cAACS,EAAA,EAAD,CAAOC,MAAM,UAAb,SACC5B,KAAKT,MAAM2B,cAEL,cAAC,IAAD,UACE,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,iB,GA5BIhB,cCAHiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f24505e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n \nimport { Table } from 'reactstrap';\nclass Home extends Component {\n  state = {\n    covidstatdata: [{id:0,totalcases:0,death:1,recovered:1,datetime:'2021-01-01'}] // must have at least one dummy data otherwise throw Property does not exist on type 'never'\n  }\n  constructor(props: any) {\n    super(props);\n\tthis.fetchCovidStat = this.fetchCovidStat.bind(this);\n  }\n  componentWillMount() {\n  }\n  componentDidMount() {\n\t this.fetchCovidStat().then((data) => {\n\t\tthis.setState({covidstatdata:data})\n\t});\n  }\n  \n  fetchCovidStat() {\n\t  const API_URL = 'https://api.imgshow-apps.com/admin/misc/admin_coronavirus.php?action=viewbyapionlychange';\n \n\t  return fetch(API_URL).then((response) => {\n\t\treturn response.json()\n\t  })\n  }\n  \n  render() {\n    return (\n\n      <div className=\"App\">\n          <div>\n\t\t\t<a href=\"https://www.worldometers.info/coronavirus/\" target=\"_blank\" rel=\"noreferrer\">Coronavirus worldometers stat</a>\n\t\t  </div>\n\t\t  <Table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Cases</th>\n\t\t\t\t<th>Death</th>\n\t\t\t\t<th>Recovered</th>\n\t\t\t\t<th>Date Time</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\n\t\t{this.state.covidstatdata.map(d => (\n\t\t\t<tr key={d.datetime}><td>{d.totalcases}</td><td>{d.death}</td><td>{d.recovered}</td><td>{d.datetime}</td></tr>\n\t\t))} \n\t\t</tbody>\n\t\t</Table>\n      </div>\n    )\n  }\n  \n}\n\nexport default Home;\n","\nimport EventEmitter from 'eventemitter3';\n\nvar ee = new EventEmitter();\n\nexport default ee;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Home';\nimport ee from './EventManager';\n\nimport React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends Component {\n  componentWillMount() {\n    ee.on('infomsg', this.onInfomsg, this);\n  }\n  componentWillUnmount() {\n\t ee.off('infomsg', this.onInfomsg);\n  }\n  onInfomsg(opts:any) {\n    this.setState({infomessage:opts.msg});\n  }\n\n  state = {\n\t  infomessage:''\n\t}\n  \n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <div className=\"menu\">\n            <Link to=\"/\">Home</Link>\n          </div>\n          {this.state.infomessage !== null && this.state.infomessage !== '' && \n\t\t\t<Alert color=\"primary\">\n\t\t\t{this.state.infomessage}\n\t\t\t</Alert>}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n  \n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}